{"version":3,"sources":["components/Requests.js","components/LogIn.js","components/Sidebar.js","components/Register.js","components/LikeButton.js","components/Post.js","components/Posts.js","components/Compose.js","components/Errors.js","components/App.js","serviceWorker.js","index.js"],"names":["getPostsRequest","a","message","axios","get","catch","err","response","data","logInRequest","userInfo","post","registerRequest","composeRequest","postInfo","deleteRequest","likeRequest","LogIn","props","useState","loginInfo","setLoginInfo","handleSubmit","event","preventDefault","name","password","addErrorMessage","console","log","addProfile","changeCurrentPage","onSubmit","className","onKeyDown","e","keyCode","type","placeholder","onChange","target","value","toLowerCase","trim","onClick","Sidebar","profile","currentPage","style","background","color","Register","registerInfo","setRegisterInfo","colorPressed","setColorPressed","rePasswordEl","useRef","rePassword","current","backgroundColor","ref","LikeButton","handleLikeClick","token","_id","res","fetchData","authorId","likes","includes","cursor","opacity","length","Post","deleteButton","handleDeleteClick","d","Date","date","ampm","getHours","fullDate","getMonth","getDate","getFullYear","getMinutes","payload","Posts","posts","src","alt","slice","reverse","map","key","Compose","compose","setCompose","textAreaEl","Errors","errorMessage","App","currentComponent","addPost","requestedPosts","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error"],"mappings":"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","file":"static/js/main.1235191c.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getPostsRequest = async () => {\n    let message = '' ;\n    const response = await axios.get('http://localhost:3001/api/posts')\n    .catch(err => message = `Error: , ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const logInRequest = async (userInfo) => {\n    let message = '' ;\n    const response = await axios.post('http://localhost:3001/api/login', userInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const registerRequest = async (userInfo) => {\n    let message = '' ;\n    const response = await axios.post('http://localhost:3001/api/users', userInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const composeRequest = async (postInfo) => {\n    let message = '' ;\n    const response = await axios.post('http://localhost:3001/api/posts', postInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const deleteRequest = async (postInfo) => {\n    let message = '' ;\n    const response = await axios.post('http://localhost:3001/api/delete', postInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const likeRequest = async (postInfo) => {\n    let message = '' ;\n    const response = await axios.post('http://localhost:3001/api/like', postInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}","import React, {useState} from 'react';\nimport {logInRequest} from './Requests'\nimport '../styles/LogIn.css';\n\nconst LogIn = props => {\n    const [loginInfo, setLoginInfo] = useState();\n\n    const handleSubmit = async event =>{\n        event.preventDefault()\n        const everythingNotFilled = !loginInfo || !loginInfo.name || !loginInfo.password;\n        if(everythingNotFilled){\n            props.addErrorMessage('Error: You have to fill out both fields')\n        } else {\n            const response = await logInRequest(loginInfo)\n            if(typeof(response)=='string'){\n                console.log(response)\n                props.addErrorMessage(response)\n            } else {\n                console.log('Log in was successful')\n                props.addProfile(response);\n                props.changeCurrentPage('posts');\n                props.addErrorMessage('')\n            }\n        }\n    }\n\n    const onEnterPress = (e) => {\n        if(e.keyCode === 13) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className='loginForm' onKeyDown={onEnterPress}>\n            <input\n                type='text'\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                onChange={(e)=> setLoginInfo({\n                    ...loginInfo,\n                    name:e.target.value.toLowerCase().trim()\n                })}\n            />\n\n            <input\n                type='password'\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                onChange={(e)=> setLoginInfo({\n                    ...loginInfo,\n                    password:e.target.value.trim()\n                })}\n            />\n\n            <div className='btns'>\n                <button className='btns' onClick={()=> {\n                    props.addErrorMessage('')\n                    props.changeCurrentPage('register')\n                    }}> Register </button>\n                <button className='btns' type=\"submit\">Submit</button>\n            </div>\n        </form>\n    )\n}\n\nexport default LogIn;","import React from 'react'\nimport '../styles/Sidebar.css';\n\nconst Sidebar = props =>{\n\n    // if posts page show login/register button\n    if(!props.profile && props.currentPage==='posts'){\n        return <button className=\"login-btn\" onClick={()=>props.changeCurrentPage('log in')}>Log In / Register</button>\n    }\n\n    // if login or register page show current page and cancel button\n    else if(!props.profile && (props.currentPage==='log in'||props.currentPage==='register')){\n        return(\n            <>\n                <div className=\"page-label\">{props.currentPage}</div>\n                <button onClick={()=>{\n                    props.changeCurrentPage('posts')\n                    props.addErrorMessage('')\n                }}> Cancel </button>\n            </>)\n    }\n\n    // if compose page show cancel button\n    else if(props.profile && props.currentPage==='compose'){\n        return(\n        <button \n            onClick={()=>{\n            props.changeCurrentPage('posts')\n            props.addErrorMessage('')\n        }}> Cancel </button>)\n    }\n\n    // else person is logged in\n    // so show the profile on the page\n    // with logout and compose button\n    else{\n        return (\n        <div className='profile'>\n            <div className='profile-name' style={{\n                background:props.profile ?\n                props.profile.color : 'red'\n                }}>\n            {\n                props.profile ?\n                props.profile.name : ''\n            }\n            </div>\n\n        <button onClick={()=>props.changeCurrentPage('compose')}> Compose </button>\n\n        <button onClick={()=>{\n            props.addProfile(null)\n            props.changeCurrentPage('posts')\n            }}>Log Out</button>\n        </div>\n        )\n    }\n}\n\nexport default Sidebar","import React, {useState, useRef} from 'react';\nimport {registerRequest} from './Requests'\nimport '../styles/Register.css';\n\nconst Register = props => {\n    const [registerInfo, setRegisterInfo] = useState();\n    const [colorPressed, setColorPressed] = useState();\n    const rePasswordEl = useRef();\n\n    // when submit button is pressed\n    const handleSubmit = async event =>{\n    event.preventDefault()\n    console.log(registerInfo)\n\n    //make sure everything is filled out\n    const everythingNotFilled = !registerInfo || !registerInfo.name || !registerInfo.password || !registerInfo.rePassword || !registerInfo.color;\n    if(everythingNotFilled){\n        // if its not then send error\n        props.addErrorMessage('Error: You have to fill out all fields')\n    } else {\n        // if it is make sure passwords match\n        const passwordsDontMatch = registerInfo.password !== registerInfo.rePassword\n        if(passwordsDontMatch){\n            rePasswordEl.current.style.backgroundColor = \"#FFE1E1\";\n            props.addErrorMessage('Error: Passwords do not match')\n        } else {\n            rePasswordEl.current.style.backgroundColor = \"white\";\n\n            // if everything matches and is good then\n            // send request to register user\n            const response = await registerRequest(registerInfo)\n\n            // if response is a string it's an error\n            if(typeof(response)=='string'){\n                console.log('there is an error')\n                console.log(response)\n            } else {\n\n                // if it's an object it was successful\n                console.log('log in was successful')\n                props.addProfile(response);\n                props.changeCurrentPage('posts')\n            }\n        }\n    }\n    }\n\n    const onEnterPress = (e) => {\n        if(e.keyCode === 13) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className='registerForm' onKeyDown={onEnterPress}>\n            <input\n                type='text'\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                onChange={(e)=> setRegisterInfo({\n                    ...registerInfo,\n                    name:e.target.value.toLowerCase().trim()\n                })}\n            />\n            <input\n                type='password'\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                onChange={(e)=> setRegisterInfo({\n                    ...registerInfo,\n                    password:e.target.value.trim()\n                })}\n            />\n            <input\n                type='password'\n                name=\"rePassword\"\n                ref={rePasswordEl}\n                placeholder=\"Re-enter your password\"\n                onChange={(e)=> setRegisterInfo({\n                    ...registerInfo,\n                    rePassword:e.target.value.trim()\n                })}\n            />\n\n            {/* enter your own color\n            <input\n                type='text'\n                name=\"color\"\n                placeholder=\"Enter a Color\"\n                onChange={(e)=> setRegisterInfo({\n                    ...registerInfo,\n                    color:e.target.value.trim()\n                })}\n            /> */}\n\n            <div className='color-btns'>\n                <div className='color-btns-label'>\n                    <p> Choose a color: </p>\n                </div>\n                <div className='color-btns-choices'>\n                    <button\n                        onClick={e=>{\n                            // set orange\n                            e.preventDefault()\n                            setColorPressed(1)\n                            setRegisterInfo({\n                                ...registerInfo,\n                                color:'#FFDAC5'\n                            })\n                        }}\n                        className={colorPressed===1 ? 'selected' : null}\n                    />\n                    <button\n                        onClick={e=>{\n                            // set green\n                            e.preventDefault()\n                            setColorPressed(2)\n                            setRegisterInfo({\n                                ...registerInfo,\n                                color:'#C5FFD1'\n                            })\n                        }}\n                        className={colorPressed===2 ? 'selected' : null}\n                    />\n                    <button\n                        onClick={e=>{\n                            // set blue\n                            e.preventDefault()\n                            setColorPressed(3)\n                            setRegisterInfo({\n                                ...registerInfo,\n                                color:'#C5DCFF'\n                            })\n                        }}\n                        className={colorPressed===3 ? 'selected' : null}\n                    />\n                    <button\n                        onClick={e=>{\n                            // set purple\n                            e.preventDefault()\n                            setColorPressed(4)\n                            setRegisterInfo({\n                                ...registerInfo,\n                                color:'#F0C5FF'\n                            })\n                        }}\n                        className={colorPressed===4 ? 'selected' : null}\n                    />\n                </div>\n            </div>\n\n\n            <div className='btns'>\n                <button onClick={()=> {\n                    props.changeCurrentPage('log in')\n                    props.addErrorMessage('')\n                    }}> Log In </button>\n                <button className='btns'type='submit'>Submit</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Register;","import React from 'react'\nimport { FaRegHeart } from \"react-icons/fa\"\n\nconst LikeButton = props => {\n    const {profile, post, likeRequest} = props;\n\n    // called when a post is liked\n    const handleLikeClick = async e => {\n        e.preventDefault();\n        const res = await likeRequest({\n            token:profile.token,\n            _id:post._id\n        })\n        console.log(res);\n        props.fetchData();\n    }\n\n    // if user is able to like, make it red\n    let style = {};\n    if(post && profile && post.authorId !== profile._id && !post.likes.includes(profile._id)){\n        style = {color:'red', cursor:'pointer', opacity:1}\n    }\n\n    return (\n        <button className=\"like\" onClick={event=>{\n            if(profile && (profile._id !== post.authorId) && !post.likes.includes(profile._id) ){\n                handleLikeClick(event)\n            }\n        }} style={style}>\n            <label>{post.likes.length}</label>\n            <FaRegHeart className='heart'/>\n        </button>\n    )\n}\n\nexport default LikeButton","import React from 'react'\nimport LikeButton from './LikeButton';\nimport {deleteRequest} from './Requests'\nimport {likeRequest} from './Requests'\n\nconst Post = props => {\n    const {post} = props;\n    const {profile} = props;\n\n    if(!post){\n        return <div></div>\n    }\n\n    // handle delete button pressed\n    const handleDeleteClick = async e => {\n        e.preventDefault();\n        const res = await deleteRequest({\n            token:profile.token,\n            _id:post._id\n        })\n        console.log(res);\n        props.fetchData();\n    }\n\n    let deleteButton\n    if(profile && profile._id === post.authorId){\n        deleteButton = <button\n        className=\"delete\"\n        onClick={handleDeleteClick}\n        > Delete </button>\n    }\n\n    const months=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n    const d = new Date(post.date);\n    let ampm = d.getHours() >= 12 ? 'pm' : 'am';\n    const fullDate =`${months[d.getMonth()]} ${d.getDate()} , ${d.getFullYear()} | ${d.getHours()}:${d.getMinutes()} ${ampm}`\n\n\n    return (\n    <li className='post'>\n        <div className='content'>\n            <div className='icon'>\n                <div className='icon-color' style={{background:post.color}}></div>\n            </div>\n            <div className='info'>\n                <h3>{post.name}</h3>\n                <p className='text'>{post.payload}</p>\n                <p className='date'>{fullDate}</p>\n            </div>\n        </div>\n        <div className='postButtons'>\n            <LikeButton \n                profile={profile} \n                post={post} \n                likeRequest={likeRequest}\n                changeCurrentPage={props.changeCurrentPage}\n                fetchData={props.fetchData}\n            />\n            {deleteButton}\n        </div>\n    </li>\n    )\n}\n\nexport default Post","import React from 'react';\nimport Post from './Post'\nimport '../styles/Posts.css';\n\nconst Posts = props => {\n    const {profile} = props\n\n    if(props.posts&&props.posts.length===0){\n        return (\n            <div className='emptyPosts'> \n                <img src='https://media.giphy.com/media/26hkhPJ5hmdD87HYA/giphy.gif' alt='none found'/>\n                <p>Unfortunately there are no posts</p>\n        </div>)\n    }\n\n    return (\n    <ul>\n    {\n        props.posts.slice(0).reverse().map(post => <Post\n            key={post._id}\n            profile={profile}\n            post={post}\n            changeCurrentPage={props.changeCurrentPage}\n            fetchData={props.fetchData}\n            />)\n    }\n    </ul>\n    )\n}\n\nexport default Posts;","import React, {useState, useRef} from 'react'\nimport {composeRequest} from './Requests'\nimport '../styles/Compose.css';\n\nconst Compose = props => {\n    const [compose, setCompose] = useState('');\n    const textAreaEl = useRef();\n    const tweetLength = 280;\n\n    const handleSubmit = async e =>{\n        e.preventDefault()\n        if(compose.trim('').length>2 && compose.trim('').length<tweetLength &&props.profile){\n            const res = await composeRequest({\n                token:props.profile.token,\n                payload:compose\n            })\n            console.log(res)\n            props.changeCurrentPage('posts')\n        } else {\n            console.log('either the text is too short or theres no profile')\n        }\n    }\n\n    return (\n        <form className='composeForm' onSubmit={handleSubmit}>\n            <textarea\n                type='text'\n                name=\"text\"\n                placeholder=\"Enter your message\"\n                ref={textAreaEl}\n                onChange={(e)=> {\n                    setCompose(e.target.value.trim())\n                    if(compose.trim('').length>tweetLength){\n                        textAreaEl.current.style.backgroundColor = \"red\";\n                    } else {\n                        textAreaEl.current.style.backgroundColor = \"white\";\n                    }\n\n                }}\n            />\n\n            <input type='submit' name=\"submit\"/>\n        </form>\n    )\n}\n\nexport default Compose;","import React from 'react'\nimport '../styles/Errors.css'\n\nconst Errors = props => {\n    return (\n        <div className='errors' onClick={()=>props.addErrorMessage('')}>\n            {props.errorMessage}\n        </div>\n    )\n}\n\nexport default Errors;","import React, {useState, useEffect} from 'react'\n\nimport {getPostsRequest} from './Requests'\nimport LogIn from './LogIn'\nimport Sidebar from './Sidebar'\nimport Register from './Register'\nimport '../styles/App.css';\nimport '../styles/MediaQueries.css';\nimport Posts from './Posts'\nimport Compose from './Compose'\nimport Errors from './Errors'\n\nfunction App() {\n\n  const [currentPage, changeCurrentPage] = useState('posts');\n  const [profile, addProfile] = useState();\n  const [posts, addPost] = useState([]);\n  const [errorMessage, addErrorMessage] = useState();\n\n  const fetchData = async () => {\n    const requestedPosts =  await getPostsRequest()\n    if(requestedPosts){\n      addPost(requestedPosts)\n    } else {\n      console.log('There was an issue getting the posts')\n      addErrorMessage('There was a connection error with the DB.')\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [currentPage])\n\n  // depending on currentPage show adequate component;\n  let currentComponent\n  switch(currentPage) {\n    case 'log in':\n      currentComponent = <LogIn\n                            changeCurrentPage={changeCurrentPage}\n                            addProfile={addProfile}\n                            addErrorMessage={addErrorMessage}\n                          />\n      break;\n\n    case 'register':\n      currentComponent = <Register\n                            addProfile={addProfile}\n                            changeCurrentPage={changeCurrentPage}\n                            addErrorMessage={addErrorMessage}\n                          />\n      break;\n\n    case 'compose':\n      currentComponent = <Compose\n                            profile={profile}\n                            changeCurrentPage={changeCurrentPage}\n                          />\n      break;\n\n    default:\n      currentComponent = <Posts\n                            profile={profile}\n                            posts={posts}\n                            changeCurrentPage={changeCurrentPage}\n                            fetchData={fetchData}\n                          />\n  }\n\n\n  return (\n  <div className=\"global-app\">\n    {\n    // if there's an error message show Errors component\n    errorMessage?\n      <Errors\n        errorMessage={errorMessage}\n        addErrorMessage={addErrorMessage}\n      /> : ''\n    }\n    <div className='App'>\n      <div className='sidebar'>\n        <Sidebar\n          profile={profile}\n          currentPage={currentPage}\n          changeCurrentPage={changeCurrentPage}\n          addProfile={addProfile}\n          addErrorMessage={addErrorMessage}\n        />\n      </div>\n      <div className='container'>\n        {currentComponent}\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}