{"version":3,"sources":["components/Requests.js","components/LogIn.js","components/Sidebar.js","components/Register.js","components/LikeButton.js","components/Post.js","components/Posts.js","components/Compose.js","components/Errors.js","components/App.js","serviceWorker.js","index.js"],"names":["getPostsRequest","a","message","axios","get","catch","err","response","data","getUsersRequest","logInRequest","userInfo","post","registerRequest","composeRequest","postInfo","deleteRequest","likeRequest","dislikeRequest","searchRequest","LogIn","props","changeCurrentPage","addProfile","profile","addErrorMessage","useState","loginInfo","setLoginInfo","handleSubmit","event","preventDefault","name","password","server_LogInRequest","console","log","localStorage","setItem","_id","token","onSubmit","className","onKeyDown","e","keyCode","type","placeholder","onChange","target","value","toLowerCase","trim","onClick","Sidebar","searchText","setSearchText","currentPage","users","addPost","allPosts","server_GetPostsRequest","handleSearch","payload","final","filter","i","length","searchField","text","userProfile","find","user","style","background","color","removeItem","Register","registerInfo","setRegisterInfo","rePasswordEl","useRef","rePassword","current","backgroundColor","server_RegisterRequest","ref","triangle","onChangeComplete","hex","LikeButton","server_AddLike","server_RemoveLike","userDidntLikedBefore","authorId","likes","includes","userLikedBefore","cursor","opacity","Post","authorProfile","deleteButton","handleDeleteClick","server_DeleteRequest","d","Date","date","getMonth","getDate","getFullYear","timeHours","getHours","timeMinutes","getMinutes","ampm","fullDate","finalText","split","map","word","startsWith","Posts","posts","src","alt","slice","reverse","key","Compose","compose","setCompose","textAreaEl","server_composeRequest","Errors","errorMessage","App","currentComponent","setAllPost","addUsers","requestedPosts","server_GetUsersRequest","storediD","getItem","storedToken","f","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error"],"mappings":"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","file":"static/js/main.8ab97bda.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getPostsRequest = async () => {\n    let message = '' ;\n    const response = await axios.get('/api/posts')\n    .catch(err => message = `Error: , ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const getUsersRequest = async () => {\n    let message = '' ;\n    const response = await axios.get('/api/users')\n    .catch(err => message = `Error: , ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const logInRequest = async (userInfo) => {\n    let message = '' ;\n    const response = await axios.post('/api/login', userInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const registerRequest = async (userInfo) => {\n    let message = '' ;\n    const response = await axios.post('/api/users', userInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const composeRequest = async (postInfo) => {\n    let message = '' ;\n    const response = await axios.post('/api/posts', postInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const deleteRequest = async (postInfo) => {\n    let message = '' ;\n    const response = await axios.post('/api/delete', postInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const likeRequest = async (postInfo) => {\n    let message = '' ;\n    const response = await axios.post('/api/like', postInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const dislikeRequest = async (postInfo) => {\n    let message = '' ;\n    const response = await axios.post('/api/dislike', postInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}\n\nexport const searchRequest = async (postInfo) => {\n    let message = '' ;\n    const response = await axios.post('/api/search', postInfo)\n    .catch(err => message = `Error: ${err.response.data}`)\n    return message!==''? message : response.data;\n}","import React, {useState} from 'react';\nimport {logInRequest} from './Requests'\nimport '../styles/LogIn.css';\n\nconst LogIn = props => {\n    const {changeCurrentPage, profile, addProfile, addErrorMessage} = props\n    const [loginInfo, setLoginInfo] = useState();\n\n    const handleSubmit = async event =>{\n        event.preventDefault()\n        const everythingNotFilled = !loginInfo || !loginInfo.name || !loginInfo.password;\n\n        if(everythingNotFilled){\n            addErrorMessage('Error: You have to fill out both fields')\n        } else {\n            server_LogInRequest()\n        }\n    }\n\n    const server_LogInRequest = async () => {\n        const response = await logInRequest(loginInfo)\n        if(typeof(response)=='string'){\n            console.log(response)\n            addErrorMessage(response)\n        } else {\n            console.log('Log in was successful')\n            addProfile(response);\n            changeCurrentPage('posts');\n            addErrorMessage('')\n            localStorage.setItem('storediD', response._id);\n            localStorage.setItem('storedToken', response.token);\n        }\n    }\n\n    const onEnterPress = (e) => {\n        if(e.keyCode === 13) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className='loginForm' onKeyDown={onEnterPress}>\n            <input\n                type='text'\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                onChange={(e)=> setLoginInfo({\n                    ...loginInfo,\n                    name:e.target.value.toLowerCase().trim()\n                })}\n            />\n\n            <input\n                type='password'\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                onChange={(e)=> setLoginInfo({\n                    ...loginInfo,\n                    password:e.target.value.trim()\n                })}\n            />\n\n            <div className='btns'>\n                <button className='btns' onClick={()=> {\n                    addErrorMessage('')\n                    changeCurrentPage('posts')\n                    }}> Cancel </button>\n                <button className='btns submit' type=\"submit\">Submit</button>\n            </div>\n        </form>\n    )\n}\n\nexport default LogIn;","import React, {useState} from 'react'\nimport '../styles/Sidebar.css';\nimport {searchRequest} from './Requests'\n\nconst Sidebar = props =>{\n    const [searchText, setSearchText] = useState('');\n\n    const {profile, currentPage, addProfile, changeCurrentPage, users, addErrorMessage, addPost, allPosts, server_GetPostsRequest} = props\n\n    const handleSearch = async e =>{\n        e.preventDefault()\n\n        if(searchText === ''){\n            server_GetPostsRequest()\n        } else {\n\n            const response = await searchRequest({payload:searchText.toLowerCase()})\n            if(typeof response === 'string'){\n                console.log(response)\n                addErrorMessage(response)\n            } else {\n                addErrorMessage('')\n                console.log('front end response: ',response)\n\n                const final = allPosts.filter(post => {\n                    for(let i=0; i<response.length; i++){\n                        if (response[i] === post._id){\n                            return post\n                        }\n                    }\n                })\n\n                addPost(final)\n            }\n        }\n    }\n    const searchField = <input\n    type='text'\n    name='search'\n    placeholder=\"Search for Hashtag here\"\n    onChange = {text =>{\n        setSearchText(text.target.value)\n\n    }}\n    value={searchText}\n    />\n\n    let userProfile = {}\n    if(profile){\n        userProfile = users.find(user=> user._id === profile._id)\n    }\n\n    // if not logged in and posts page\n    // show login/register button\n    if(!profile && currentPage==='posts'){\n        return (\n        <>\n        <button className=\"login-btn\" onClick={()=>changeCurrentPage('log in')}>Log In </button>\n        <button className=\"register-btn\" onClick={()=>changeCurrentPage('register')}>Register </button>\n        <form onSubmit={handleSearch}>\n            {searchField}\n        </form>\n        </>\n        )\n    }\n\n    // if login, register, or compose page\n    // show current page and cancel button\n    else if(\n        currentPage==='log in'||\n        currentPage==='register'||\n        currentPage==='compose'\n        ){\n        return( <div className=\"page-label\">{currentPage}</div> )\n    }\n\n    // else person is logged in\n    // so show the profile on the page\n    // with logout and compose button\n    else{\n        return (\n        <div className='profile'>\n            <div \n                className='profile-name' \n                onClick={()=>{\n                    setSearchText('')\n                    server_GetPostsRequest()\n                }}\n                style={{\n                background: userProfile ?\n                    userProfile.color : 'black'\n                }}>\n            { userProfile ? userProfile.name : '' }\n            </div>\n\n        <button onClick={()=>changeCurrentPage('compose')}> Compose </button>\n\n        <button onClick={()=>{\n            addProfile(null)\n            localStorage.removeItem('storediD');\n            localStorage.removeItem('storedToken');\n            changeCurrentPage('posts')\n            console.log('Logged out.')\n            }}>Log Out</button>\n\n        <form onSubmit={handleSearch}>\n            {searchField}\n        </form>\n\n        </div>\n        )\n    }\n}\n\n\nexport default Sidebar","import React, {useState, useRef} from 'react';\nimport { TwitterPicker } from 'react-color';\n\nimport {registerRequest} from './Requests'\nimport '../styles/Register.css';\n\nconst Register = props => {\n    const {addProfile, changeCurrentPage, addErrorMessage} = props\n    const [registerInfo, setRegisterInfo] = useState();\n    const rePasswordEl = useRef();\n\n    // when submit button is pressed\n    const handleSubmit = event => {\n        console.log(registerInfo)\n        event.preventDefault()\n\n        const everythingNotFilled = !registerInfo || !registerInfo.name || !registerInfo.password || !registerInfo.rePassword || !registerInfo.color;\n\n        if(everythingNotFilled){\n            addErrorMessage('Error: You have to fill out all fields')\n        }\n        else {\n            const passwordsDontMatch = registerInfo.password !== registerInfo.rePassword\n\n            if(passwordsDontMatch){\n                rePasswordEl.current.style.backgroundColor = \"#FFE1E1\";\n                addErrorMessage('Error: Passwords do not match')\n            }\n            else {\n                rePasswordEl.current.style.backgroundColor = \"white\";\n                server_RegisterRequest()\n            }\n        }\n    }\n\n    // send request to register user\n    const server_RegisterRequest = async () =>{\n        const response = await registerRequest(registerInfo)\n        if(typeof(response)=='string'){\n            console.log(response)\n            addErrorMessage(response)\n        } else {\n            console.log('Log in was successful')\n            addProfile(response);\n            changeCurrentPage('posts')\n        }\n    }\n\n    const onEnterPress = (e) => {\n        if(e.keyCode === 13) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className='registerForm' onKeyDown={onEnterPress}>\n            <input\n                type='text'\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                onChange={(e)=> setRegisterInfo({\n                    ...registerInfo,\n                    name : e.target.value.toLowerCase().trim()\n                })}\n            />\n            <input\n                type='password'\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                onChange={(e)=> setRegisterInfo({\n                    ...registerInfo,\n                    password : e.target.value.trim()\n                })}\n            />\n            <input\n                type='password'\n                name=\"rePassword\"\n                ref={rePasswordEl}\n                placeholder=\"Re-enter your password\"\n                onChange={(e)=> setRegisterInfo({\n                    ...registerInfo,\n                    rePassword : e.target.value.trim()\n                })}\n            />\n\n            <div className='color-btns'>\n                <div className='color-btns-label'>\n                    <p> Choose a color: </p>\n                </div>\n                <div className='color-btns-choices'>\n                <TwitterPicker\n                    triangle='hide'\n                    onChangeComplete={(color, event)=>{\n                        setRegisterInfo({\n                            ...registerInfo,\n                            color : color.hex\n                        })\n                }}/>\n                </div>\n            </div>\n\n\n            <div className='btns'>\n                <button onClick={()=> {\n                    changeCurrentPage('posts')\n                    addErrorMessage('')\n                    }}> Cancel </button>\n                <button className='btns submit'type='submit'>Submit</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Register;","import React from 'react'\nimport { FaRegHeart } from \"react-icons/fa\"\nimport {likeRequest, dislikeRequest} from './Requests'\n\nconst LikeButton = props => {\n    const {profile, post, server_GetPostsRequest} = props;\n\n    const server_AddLike = async (e) => {\n        e.preventDefault()\n\n        const response = await likeRequest({\n            token:profile.token,\n            _id:post._id\n        })\n\n        if(response !== 'OK'){\n            console.log(response)\n        }\n        else {\n            console.log('Like was added.')\n            server_GetPostsRequest()\n        }\n    }\n\n    const server_RemoveLike = async (e) => {\n        e.preventDefault()\n\n        const response = await dislikeRequest({\n            token:profile.token,\n            _id:post._id\n        })\n\n        if(response !== 'OK'){\n            console.log(response)\n        }\n        else {\n            console.log('Like was removed.')\n            server_GetPostsRequest()\n        }\n    }\n\n    // if user is able to like, make it red\n    let style = {};\n\n    const userDidntLikedBefore = post && profile && post.authorId !== profile._id && !post.likes.includes(profile._id)\n\n    const userLikedBefore = post && profile && post.authorId !== profile._id && post.likes.includes(profile._id)\n\n    if(userDidntLikedBefore){\n        style = {color:'black', cursor:'pointer', opacity:1}\n    }\n\n    else if(userLikedBefore){\n        style = {color:'red', cursor:'pointer', opacity:1}\n    }\n\n    return (\n        <button className=\"like\" onClick={event=>{\n            if(userDidntLikedBefore){\n                server_AddLike(event)\n            }\n            else if(userLikedBefore){\n                server_RemoveLike(event)\n            }\n        }} style={style}>\n            <label>{post.likes.length}</label>\n            <FaRegHeart className='heart'/>\n        </button>\n    )\n}\n\nexport default LikeButton","import React from 'react'\nimport LikeButton from './LikeButton';\nimport {deleteRequest} from './Requests'\n\nconst Post = props => {\n    const {post, profile, users, changeCurrentPage, server_GetPostsRequest} = props;\n\n    let authorProfile = users.find(user => user._id === post.authorId)\n\n    if(!authorProfile){\n        authorProfile = {\n            name:'User no longer exists',\n            color: 'red'\n        }\n    }\n\n    // handle delete button pressed\n    const handleDeleteClick = async e => {\n        e.preventDefault()\n        server_DeleteRequest()\n    }\n\n    const server_DeleteRequest = async () => {\n        const response =  await deleteRequest({\n            token:profile.token,\n            _id:post._id\n        })\n\n        if(response !== 'OK'){\n            console.log(response)\n        }\n        else {\n            console.log('Post was successfully deleted.')\n            server_GetPostsRequest()\n        }\n    }\n\n    let deleteButton\n    if(profile && profile._id === post.authorId){\n        deleteButton = <button\n        className=\"delete\"\n        onClick={handleDeleteClick}\n        > Delete </button>\n    }\n\n    // creating the formatted date for post\n    const months=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n    const d = new Date(post.date)\n    const date =`${months[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`\n    const timeHours = d.getHours() > 12 ? d.getHours() - 12 : d.getHours()\n    const timeMinutes = (d.getMinutes() < 10 ? '0' : '') + d.getMinutes()\n    const ampm = d.getHours() >= 12 ? 'pm' : 'am';\n    const fullDate =`${date} | ${timeHours}:${timeMinutes} ${ampm}`\n\n    let finalText = <> {post.payload.split(' ').map(word => {\n        if(word.startsWith('#')){\n            return <button>{word}</button>\n        } else {\n            return word + ' '\n        }\n    })}</>\n\n    return (\n    <li className='post'>\n\n        <div className='info'>\n            <div className='info-name'>\n                <div className='icon-color' style={{background:authorProfile.color}} />\n                <h3>{authorProfile.name}</h3>\n            </div>\n            <p className='text'>{finalText}</p>\n            <p className='date'>{fullDate}</p>\n        </div>\n\n        <div className='postButtons'>\n            <LikeButton {...{\n                profile,\n                post,\n                changeCurrentPage,\n                server_GetPostsRequest\n                }}\n            />\n            {deleteButton}\n        </div>\n    </li>\n    )\n}\n\nexport default Post","import React from 'react';\nimport Post from './Post'\nimport '../styles/Posts.css';\n\nconst Posts = props => {\n    const {profile, posts, users, changeCurrentPage, server_GetPostsRequest} = props\n\n    if(posts && posts.length === 0){\n        return (\n            <div className='emptyPosts'> \n                <img src='https://media.giphy.com/media/26hkhPJ5hmdD87HYA/giphy.gif' alt='none found'/>\n                <p>Unfortunately there are no posts</p>\n        </div>)\n    }\n\n    return (\n    <ul>\n    {\n        posts.slice(0).reverse().map(post => <Post\n                key={post._id}\n                {...{\n                    profile,\n                    post,\n                    users,\n                    changeCurrentPage,\n                    server_GetPostsRequest\n                }}\n            />)\n    }\n    </ul>\n    )\n}\n\nexport default Posts;","import React, {useState, useRef} from 'react'\nimport {composeRequest} from './Requests'\nimport '../styles/Compose.css';\n\nconst Compose = props => {\n    const {profile, changeCurrentPage, addErrorMessage} = props\n    const [compose, setCompose] = useState('');\n    const textAreaEl = useRef();\n    const tweetLength = 120;\n\n    const handleSubmit = async e =>{\n        e.preventDefault()\n        const correctLength = compose.trim('').length > 2 && compose.trim('').length < tweetLength;\n\n        if(correctLength){\n            server_composeRequest();\n        } else {\n            addErrorMessage('Error: Text is not the right length')\n        }\n    }\n\n    const server_composeRequest = async () => {\n        const response = await composeRequest({\n            token : profile.token,\n            payload : compose\n        })\n\n        if(response !== 'OK'){\n            addErrorMessage(response)\n        }\n        else {\n            console.log('Post was created.')\n            changeCurrentPage('posts')\n        }\n    }\n\n    return (\n        <form className='composeForm' onSubmit={handleSubmit}>\n            <textarea\n                type='text'\n                name=\"text\"\n                placeholder=\"Enter your message\"\n                ref={textAreaEl}\n                onChange={(e)=> {\n                    setCompose(e.target.value.trim())\n                    if(compose.trim('').length>tweetLength){\n                        textAreaEl.current.style.backgroundColor = \"red\";\n                    } else {\n                        textAreaEl.current.style.backgroundColor = \"white\";\n                    }\n                }}\n            />\n            <div className='btns'>\n                <button name=\"cancel\" className='submit' onClick={e => {\n                    e.preventDefault()\n                    changeCurrentPage('posts')\n                }}>Cancel</button>\n                <button type='submit' name=\"submit\" className='submit'>Submit</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Compose;","import React from 'react'\nimport '../styles/Errors.css'\n\nconst Errors = props => {\n    return (\n        <div className='errors' onClick={()=>props.addErrorMessage('')}>\n            {props.errorMessage}\n        </div>\n    )\n}\n\nexport default Errors;","import React, {useState, useEffect} from 'react'\n\nimport {getPostsRequest, getUsersRequest} from './Requests'\nimport LogIn from './LogIn'\nimport Sidebar from './Sidebar'\nimport Register from './Register'\nimport '../styles/App.css';\nimport '../styles/MediaQueries.css';\nimport Posts from './Posts'\nimport Compose from './Compose'\nimport Errors from './Errors'\n\nfunction App() {\n\n  const [currentPage, changeCurrentPage] = useState('posts');\n  const [profile, addProfile] = useState();\n  const [posts, addPost] = useState([]);\n  const [allPosts, setAllPost] = useState([]);\n  const [users, addUsers] = useState([]);\n  const [errorMessage, addErrorMessage] = useState();\n\n  const server_GetPostsRequest = async () => {\n    const requestedPosts =  await getPostsRequest()\n    if(typeof requestedPosts === 'string'){\n      addErrorMessage('There was a connection error with the DB.')\n      addPost([])\n    } else {\n      addPost(requestedPosts)\n      setAllPost(requestedPosts)\n    }\n  }\n\n  const server_GetUsersRequest = async () => {\n    const response =  await getUsersRequest()\n    if(typeof response === 'string'){\n      console(response)\n    } else {\n      const storediD = localStorage.getItem('storediD');\n      const storedToken = localStorage.getItem('storedToken');\n\n      if(storediD){\n        const f = response.find(user=> user._id === storediD)\n        addProfile({...f, token:storedToken})\n      }\n\n      addUsers(response)\n    }\n  }\n\n  useEffect(() => {\n    server_GetUsersRequest()\n    server_GetPostsRequest()\n  }, [currentPage])\n\n\n  // depending on currentPage show adequate component;\n  let currentComponent\n  switch(currentPage) {\n    case 'log in':\n      currentComponent = <LogIn {...{\n                              profile,\n                              addProfile,\n                              changeCurrentPage,\n                              addErrorMessage\n                            }}\n                          />\n      break;\n\n    case 'register':\n      currentComponent = <Register {...{\n                              addProfile,\n                              changeCurrentPage,\n                              addErrorMessage\n                            }}\n                          />\n      break;\n\n    case 'compose':\n      currentComponent = <Compose {...{\n                              profile,\n                              changeCurrentPage,\n                              addErrorMessage\n                            }}\n                          />\n      break;\n\n    default:\n      currentComponent = <Posts {...{\n                              profile,\n                              posts,\n                              users,\n                              changeCurrentPage,\n                              server_GetPostsRequest\n                            }}\n                          />\n  }\n\n\n  return (\n  <div className=\"global-app\">\n\n    { // if there's an error message show Errors component\n    errorMessage?\n      <Errors {...{errorMessage, addErrorMessage}} /> : ''\n    }\n\n    <div className='App'>\n      <div className='sidebar'>\n        <Sidebar {...{\n          users,\n          profile,\n          addProfile,\n          currentPage,\n          changeCurrentPage,\n          addErrorMessage,\n          addPost,\n          allPosts,\n          server_GetPostsRequest\n          }}\n        />\n      </div>\n\n      <div className='container'>\n        {currentComponent}\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}